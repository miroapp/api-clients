openapi: 3.0.1
info:
  title: Audit Logs (Enterprise Plan)
  version: v2
servers:
- url: https://api.miro.com
security:
- bearerAuth: []
tags:
- description: Audit Logs API for reading audit logs of an organization.
  name: Audit Logs
paths: {}
components:
  schemas:
    BasicError:
      type: object
      properties:
        status:
          type: number
          description: HTTP status code.
        code:
          type: string
          description: Description of the status code.
        message:
          type: string
          description: Explanation for the error
        type:
          type: string
          description: Type of the object returned.
          default: error
    AuditPage:
      type: object
      properties:
        type:
          type: string
          description: Type of the response, in this case it's always 'cursor-list'
          example: cursor-list
        limit:
          type: integer
          description: Page limit
          example: 10
        size:
          type: integer
          description: Item count in current page
          example: 2
        cursor:
          type: string
          description: The key that should be used as the cursor request parameter
            to fetch the next page
          example: 2023-09-01T09:30:10.840687Z#1234567890123456789-DDB
        content:
          type: array
          items:
            $ref: '#/components/schemas/AuditEvent'
          description: Audit events list
    AuditEvent:
      type: object
      properties:
        id:
          type: string
          description: Audit event id
          example: 2023-09-01T09:30:10.840687Z#1234567890123456789-DDB
        context:
          $ref: '#/components/schemas/AuditContext'
        object:
          $ref: '#/components/schemas/AuditObject'
        createdAt:
          type: string
          description: Time when the audit event has been created
          format: date-time
          example: 2023-09-01T09:30:10.840+0000
        details:
          type: object
          description: Details json related to the audit event
          example: '{ "authType": "SSO", "mfaFactorType": "NONE" }'
        createdBy:
          $ref: '#/components/schemas/AuditCreatedBy'
        event:
          type: string
          description: Event type of the audit event
          example: sign_in_succeeded
    AuditContext:
      type: object
      description: Audit context
      properties:
        ip:
          type: string
          description: Ip address associated with the audit context
          example: 0.0.0.0
        team:
          $ref: '#/components/schemas/AuditTeam'
        organization:
          $ref: '#/components/schemas/AuditOrganization'
    AuditTeam:
      type: object
      description: Team associated with the audit context
      properties:
        id:
          type: string
          description: Id of the team
          example: 1234567890123456789
        name:
          type: string
          description: Name of the team
          example: Example Team
    AuditOrganization:
      type: object
      description: Organization associated with the audit context
      properties:
        id:
          type: string
          description: Id of the organization
          example: 1234567890123456789
        name:
          type: string
          description: Name of the organization
          example: Example Organization
    AuditObject:
      type: object
      description: The object related with the audit event
      properties:
        id:
          type: string
          description: Id of the object
          example: 1234567890123456789
        name:
          type: string
          description: Name of the object
          example: Example Object
    AuditCreatedBy:
      type: object
      description: The details regarding the creator of the audit event
      properties:
        type:
          type: string
          description: Type of the creator
          example: user
          enum:
          - user
          - application
          - scim_provisioner
          - miro_automation
        id:
          type: string
          description: Id of the creator
          example: 1234567890123456789
        name:
          type: string
          description: Name of the creator
          example: John Smith
        email:
          type: string
          description: Email of the creator
          example: john.smith@miro.com
  responses:
    '400':
      description: Malformed request
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 400
                code:
                  default: invalidParameters
    '401':
      description: Invalid authentication credentials
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 401
                code:
                  default: tokenNotProvided
    '403':
      description: Invalid access
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 403
                code:
                  default: forbiddenAccess
    '404':
      description: Invalid access
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 404
                code:
                  default: notFound
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 409
                code:
                  default: conflict
    '429':
      description: Too many requests
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/BasicError'
            - type: object
              properties:
                status:
                  default: 429
                code:
                  default: tooManyRequests
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
