# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - run: pip install poetry

      # install requirements
      - run: yarn
        working-directory: packages/miro-api

      - run: poetry install --with=docs
        working-directory: packages/miro-api-python

      # build docs
      - run: yarn build:docs
        working-directory: packages/miro-api

      - run: scripts/build-docs.sh
        working-directory: packages/miro-api-python

      # prep docs directory
      - run: |
          mkdir -p docs_to_upload/node
          cp -r packages/miro-api/docs-out/* docs_to_upload/node/

          mkdir -p docs_to_upload/python
          cp -r packages/miro-api-python/docs-out/* docs_to_upload/python/

      # upload and deploy docs
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "docs_to_upload/"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Publish the guides to developer portal
      - name: Publish the guides to developer portal
        run: "README_API_KEY='${{ secrets.README_API_KEY }}' scripts/upload-docs-to-readme.mjs"
