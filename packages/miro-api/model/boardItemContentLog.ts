/**
 * Miro Developer Platform
 * <img src=\"https://content.pstmn.io/47449ea6-0ef7-4af2-bac1-e58a70e61c58/aW1hZ2UucG5n\" width=\"1685\" height=\"593\">  ### Miro Developer Platform concepts  - New to the Miro Developer Platform? Interested in learning more about platform concepts?? [Read our introduction page](https://beta.developers.miro.com/docs/introduction) and familiarize yourself with the Miro Developer Platform capabilities in a few minutes.   ### Getting started with the Miro REST API  - [Quickstart (video):](https://beta.developers.miro.com/docs/try-out-the-rest-api-in-less-than-3-minutes) try the REST API in less than 3 minutes. - [Quickstart (article):](https://beta.developers.miro.com/docs/build-your-first-hello-world-app-1) get started and try the REST API in less than 3 minutes.   ### Miro REST API tutorials  Check out our how-to articles with step-by-step instructions and code examples so you can:  - [Get started with OAuth 2.0 and Miro](https://beta.developers.miro.com/docs/getting-started-with-oauth)   ### Miro App Examples  Clone our [Miro App Examples repository](https://github.com/miroapp/app-examples) to get inspiration, customize, and explore apps built on top of Miro\'s Developer Platform 2.0.
 *
 * The version of the OpenAPI document: v2.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {Actor} from './actor'

/**
 * @internal
 * Contains information about the content log of for a board item.
 */
export class BoardItemContentLog {
  /**
   * Unique identifier of the content log.
   */
  'id'?: string
  /**
   * Unique identifier of the board where the action happened.
   */
  'contentId'?: string
  /**
   * Type of action within the board, such as creation of a widget, update of a comment message, and so on.
   */
  'actionType'?: string | (typeof BoardItemContentLog.ActionTypeEnum)[keyof typeof BoardItemContentLog.ActionTypeEnum]
  /**
   * Date and time when the action happened.<br>Format: UTC, adheres to [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), includes a [trailing Z offset](https://en.wikipedia.org/wiki/ISO_8601#Coordinated_Universal_Time_(UTC)).
   */
  'actionTime'?: Date
  'actor'?: Actor
  /**
   * Type of the board item on which the action happened.
   */
  'itemType'?: string | (typeof BoardItemContentLog.ItemTypeEnum)[keyof typeof BoardItemContentLog.ItemTypeEnum]
  /**
   * Unique identifier of the board item on which the action happened. For example, the widget ID.
   */
  'itemId'?: string
  /**
   * Object that contains information about the state of the board item after the action was performed.
   */
  'state'?: object

  /** @ignore */
  static discriminator: string | undefined = undefined

  /** @ignore */
  static attributeTypeMap: Array<{name: string; baseName: string; type: string}> = [
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
    },
    {
      name: 'contentId',
      baseName: 'contentId',
      type: 'string',
    },
    {
      name: 'actionType',
      baseName: 'actionType',
      type: 'BoardItemContentLog.ActionTypeEnum',
    },
    {
      name: 'actionTime',
      baseName: 'actionTime',
      type: 'Date',
    },
    {
      name: 'actor',
      baseName: 'actor',
      type: 'Actor',
    },
    {
      name: 'itemType',
      baseName: 'itemType',
      type: 'BoardItemContentLog.ItemTypeEnum',
    },
    {
      name: 'itemId',
      baseName: 'itemId',
      type: 'string',
    },
    {
      name: 'state',
      baseName: 'state',
      type: 'object',
    },
  ]

  /** @ignore */
  static getAttributeTypeMap() {
    return BoardItemContentLog.attributeTypeMap
  }
}

export namespace BoardItemContentLog {
  export const ActionTypeEnum = {
    Create: 'create',
    Update: 'update',
    Delete: 'delete',
  } as const
  export const ItemTypeEnum = {
    Widget: 'widget',
    CommentThread: 'comment_thread',
    CommentMessage: 'comment_message',
  } as const
}
