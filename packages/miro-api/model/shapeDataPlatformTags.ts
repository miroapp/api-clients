/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @internal
 * Contains shape item data, such as the content or shape type of the shape.
 */
export class ShapeDataPlatformTags {
  /**
   * The text you want to display on the shape.
   */
  'content'?: string
  /**
   * Defines the geometric shape of the item when it is rendered on the board.
   */
  'shape'?: string | (typeof ShapeDataPlatformTags.ShapeEnum)[keyof typeof ShapeDataPlatformTags.ShapeEnum] =
    ShapeDataPlatformTags.ShapeEnum.Rectangle

  /** @ignore */
  static discriminator: string | undefined = undefined

  /** @ignore */
  static attributeTypeMap: Array<{name: string; baseName: string; type: string}> = [
    {
      name: 'content',
      baseName: 'content',
      type: 'string',
    },
    {
      name: 'shape',
      baseName: 'shape',
      type: 'ShapeDataPlatformTags.ShapeEnum',
    },
  ]

  /** @ignore */
  static getAttributeTypeMap() {
    return ShapeDataPlatformTags.attributeTypeMap
  }
}

export namespace ShapeDataPlatformTags {
  export const ShapeEnum = {
    Rectangle: 'rectangle',
    RoundRectangle: 'round_rectangle',
    Circle: 'circle',
    Triangle: 'triangle',
    Rhombus: 'rhombus',
    Parallelogram: 'parallelogram',
    Trapezoid: 'trapezoid',
    Pentagon: 'pentagon',
    Hexagon: 'hexagon',
    Octagon: 'octagon',
    WedgeRoundRectangleCallout: 'wedge_round_rectangle_callout',
    Star: 'star',
    FlowChartPredefinedProcess: 'flow_chart_predefined_process',
    Cloud: 'cloud',
    Cross: 'cross',
    Can: 'can',
    RightArrow: 'right_arrow',
    LeftArrow: 'left_arrow',
    LeftRightArrow: 'left_right_arrow',
    LeftBrace: 'left_brace',
    RightBrace: 'right_brace',
  } as const
}
