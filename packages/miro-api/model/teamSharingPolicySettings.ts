/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * @internal
 * Team sharing policy settings
 */
export class TeamSharingPolicySettings {
  /**
   * Set who can create assets in a team
   */
  'createAssetAccessLevel'?:
    | string
    | typeof TeamSharingPolicySettings.CreateAssetAccessLevelEnum[keyof typeof TeamSharingPolicySettings.CreateAssetAccessLevelEnum]
  /**
   *  Default board access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view * \"comment\": Anyone in the team can comment * \"edit\":    Anyone in the team can edit
   */
  'defaultBoardAccess'?:
    | string
    | typeof TeamSharingPolicySettings.DefaultBoardAccessEnum[keyof typeof TeamSharingPolicySettings.DefaultBoardAccessEnum]
  /**
   *  Default organization access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view * \"comment\": Anyone in the team can comment * \"edit\":    Anyone in the team can edit
   */
  'defaultOrganizationAccess'?:
    | string
    | typeof TeamSharingPolicySettings.DefaultOrganizationAccessEnum[keyof typeof TeamSharingPolicySettings.DefaultOrganizationAccessEnum]
  /**
   *  Default project access * \"private\": Only board owners can access * \"view\":    Anyone in the team can view
   */
  'defaultProjectAccess'?:
    | string
    | typeof TeamSharingPolicySettings.DefaultProjectAccessEnum[keyof typeof TeamSharingPolicySettings.DefaultProjectAccessEnum]
  /**
   *  * \"allowed\": Allow move board to team * \"not_allowed\": Not allow move board to team
   */
  'moveBoardToAccount'?:
    | string
    | typeof TeamSharingPolicySettings.MoveBoardToAccountEnum[keyof typeof TeamSharingPolicySettings.MoveBoardToAccountEnum]
  /**
   *  * \"allowed\": Allow sharing on team * \"not_allowed\": Not allow sharing on team
   */
  'sharingOnAccount'?:
    | string
    | typeof TeamSharingPolicySettings.SharingOnAccountEnum[keyof typeof TeamSharingPolicySettings.SharingOnAccountEnum]
  /**
   *  * \"allowed\": Allow sharing on organization * \"allowed_with_editing\": Allow sharing with editing on organization * \"not_allowed\": Not allow sharing on organization
   */
  'sharingOnOrganization'?:
    | string
    | typeof TeamSharingPolicySettings.SharingOnOrganizationEnum[keyof typeof TeamSharingPolicySettings.SharingOnOrganizationEnum]
  /**
   *  * \"allowed\": Allow sharing via public link * \"allowed_with_editing\": Allow sharing with editing via public link * \"not_allowed\": Not allow sharing via public link
   */
  'sharingViaPublicLink'?:
    | string
    | typeof TeamSharingPolicySettings.SharingViaPublicLinkEnum[keyof typeof TeamSharingPolicySettings.SharingViaPublicLinkEnum]
  /**
   *  * \"allowed\": Allow sharing with external users * \"not_allowed\": Not allow sharing with external users
   */
  'sharingWithExternalUsers'?:
    | string
    | typeof TeamSharingPolicySettings.SharingWithExternalUsersEnum[keyof typeof TeamSharingPolicySettings.SharingWithExternalUsersEnum]
  /**
   * Enable whitelist domains
   */
  'whiteListDomainsEnabled'?: boolean
  /**
   * Whitelisted domains
   */
  'whiteListedDomains'?: Array<string>

  /** @ignore */
  static discriminator: string | undefined = undefined

  /** @ignore */
  static attributeTypeMap: Array<{name: string; baseName: string; type: string}> = [
    {
      name: 'createAssetAccessLevel',
      baseName: 'createAssetAccessLevel',
      type: 'TeamSharingPolicySettings.CreateAssetAccessLevelEnum',
    },
    {
      name: 'defaultBoardAccess',
      baseName: 'defaultBoardAccess',
      type: 'TeamSharingPolicySettings.DefaultBoardAccessEnum',
    },
    {
      name: 'defaultOrganizationAccess',
      baseName: 'defaultOrganizationAccess',
      type: 'TeamSharingPolicySettings.DefaultOrganizationAccessEnum',
    },
    {
      name: 'defaultProjectAccess',
      baseName: 'defaultProjectAccess',
      type: 'TeamSharingPolicySettings.DefaultProjectAccessEnum',
    },
    {
      name: 'moveBoardToAccount',
      baseName: 'moveBoardToAccount',
      type: 'TeamSharingPolicySettings.MoveBoardToAccountEnum',
    },
    {
      name: 'sharingOnAccount',
      baseName: 'sharingOnAccount',
      type: 'TeamSharingPolicySettings.SharingOnAccountEnum',
    },
    {
      name: 'sharingOnOrganization',
      baseName: 'sharingOnOrganization',
      type: 'TeamSharingPolicySettings.SharingOnOrganizationEnum',
    },
    {
      name: 'sharingViaPublicLink',
      baseName: 'sharingViaPublicLink',
      type: 'TeamSharingPolicySettings.SharingViaPublicLinkEnum',
    },
    {
      name: 'sharingWithExternalUsers',
      baseName: 'sharingWithExternalUsers',
      type: 'TeamSharingPolicySettings.SharingWithExternalUsersEnum',
    },
    {
      name: 'whiteListDomainsEnabled',
      baseName: 'whiteListDomainsEnabled',
      type: 'boolean',
    },
    {
      name: 'whiteListedDomains',
      baseName: 'whiteListedDomains',
      type: 'Array<string>',
    },
  ]

  /** @ignore */
  static getAttributeTypeMap() {
    return TeamSharingPolicySettings.attributeTypeMap
  }
}

export namespace TeamSharingPolicySettings {
  export const CreateAssetAccessLevelEnum = {
    CompanyAdmins: 'COMPANY_ADMINS',
    Admins: 'ADMINS',
    AllMembers: 'ALL_MEMBERS',
  } as const
  export const DefaultBoardAccessEnum = {
    Private: 'private',
    View: 'view',
    Comment: 'comment',
    Edit: 'edit',
  } as const
  export const DefaultOrganizationAccessEnum = {
    Private: 'private',
    View: 'view',
    Comment: 'comment',
    Edit: 'edit',
  } as const
  export const DefaultProjectAccessEnum = {
    Private: 'private',
    View: 'view',
  } as const
  export const MoveBoardToAccountEnum = {
    Allowed: 'allowed',
    NotAllowed: 'not_allowed',
  } as const
  export const SharingOnAccountEnum = {
    Allowed: 'allowed',
    NotAllowed: 'not_allowed',
  } as const
  export const SharingOnOrganizationEnum = {
    Allowed: 'allowed',
    AllowedWithEditing: 'allowed_with_editing',
    NotAllowed: 'not_allowed',
  } as const
  export const SharingViaPublicLinkEnum = {
    Allowed: 'allowed',
    AllowedWithEditing: 'allowed_with_editing',
    NotAllowed: 'not_allowed',
  } as const
  export const SharingWithExternalUsersEnum = {
    Allowed: 'allowed',
    NotAllowed: 'not_allowed',
  } as const
}
