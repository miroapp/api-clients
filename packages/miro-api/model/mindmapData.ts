/**
 * Miro API
 * Miro API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {MindmapNodeView} from './mindmapNodeView'

/**
 * @internal
 * Contains mind map node data, such as `nodeView` or `isRoot`.
 */
export class MindmapData {
  'nodeView'?: MindmapNodeView
  /**
   * Indicates whether this node is the root of the mind map.
   */
  'isRoot'?: boolean
  /**
   * Indicates where this node is positioned relative to the root node. `start` indicates that this node must be positioned at the start of the root node, which is either the left or top of the root node. `end` indicates that this node must be positioned at the emd of the root node, which is either the right or bottom of the root node.
   */
  'direction'?: string | (typeof MindmapData.DirectionEnum)[keyof typeof MindmapData.DirectionEnum]

  /** @ignore */
  static discriminator: string | undefined = undefined

  /** @ignore */
  static attributeTypeMap: Array<{name: string; baseName: string; type: string}> = [
    {
      name: 'nodeView',
      baseName: 'nodeView',
      type: 'MindmapNodeView',
    },
    {
      name: 'isRoot',
      baseName: 'isRoot',
      type: 'boolean',
    },
    {
      name: 'direction',
      baseName: 'direction',
      type: 'MindmapData.DirectionEnum',
    },
  ]

  /** @ignore */
  static getAttributeTypeMap() {
    return MindmapData.attributeTypeMap
  }
}

export namespace MindmapData {
  export const DirectionEnum = {
    Start: 'start',
    End: 'end',
  } as const
}
